---
layout:     post
title:      "php工程开发心得"
subtitle:   " \"今年来百度后的开发总结\""
date:       2017-03-05 12:00:00
author:     "MYC"
header-img: "img/post-bg-universe.jpg"
catalog: true
tags:
    - 学习 
    - 心得
    - php
    - js
---

## 心得总结

### 框架

来到百度过后主要的工作还是web开发，本来以为我会做一点数据分析方面的项目开发，但是到目前感觉还是更偏向于php web开发，目前所进行的主要工作都使用到了php的框架，多是mvc架构的框架，如：yii、laravel、lumen，这些框架使一个工程的开发变得简单。

不得不承认php在web开发方面的能力确实非常的强大，而且提供了一个前后端集成的全栈式环境，使后端与前端的交互变得简单，不过框架需要配置，在整个项目开发过程中，令我最难受的就是php的配置，泽中难受说到底还是因为没有足够的框架基础，没有阅读源码或者不了解具体的调度基础。

后面我会陆陆续续的贴出一些框架的学习心得和自己的理解。

### js

在最近的项目中，我又进行了js的相关开发，使用了ajax进行get请求的处理，虽然现在对js还是一知半解，不过还是有了很多的理解，整个从后端到前端的开发流程我都走了一遍，感觉还是最mvc框架，和web开发有了更深的理解后面也会趁着业余时间做一些相关学习，阅读相关书籍，到目前为止虽然感觉自己还是像搬砖一样的学习知识，但是感觉自己连砖都搬不动，还是很多基础知识不到位，到现在很多东西停在了理论上，需要多阅读代码，也需要多进行行业各方面的接触，多写程序，上传到github上，进行版本保留，多阅读别人的代码，这才是比较好的节奏。


> 反正有这个文档，我就在这里面写吧

### php如果内存内存越界
设置不限制内存

	ini_set('memory_limit', '-1');

### 诺亚任务问题排查

如果有任务日志报警出现255的错误，这时候一般是报的php的异常，看日志直接对应到相应的报错时间点下的错误日志看到底是什么问题，一般能够排查出问题的。

### 听到了一群不懂的东西

akka、kafka、celery、spark、flink

flask教程：

http://www.pythondoc.com/flask-mega-tutorial/index.html

### 脚本发送邮件，并且附件文件

	#!/bin/bash
	time=`date -d "now" +%Y-%m-%d`
	echo "please see attachment." | mutt liubaoju@baidu.com maoyancan@baidu.com murong@baidu.com guojingjing07@baidu.com wuzhangyan@baidu.com -e "my_hdr from:liubaoju@baidu.com" -s "${time} 19:00 exported coupon data" -a "/home/work/var/data/lvshi/discountinfo/${time}-07-00-00-pm.xls"

### php工具中有很多脚本可能并不符合我们的需求，可以进行改动

比如说dataprovider，yii的CArrayDataProvider，他进行数据封装是对于一个完整的数据链，我们只传输部分数据偏移量就会出问题，这时候需要改源码，比如下面的这个方法，获取数据，如果注释的那一行就获取偏移量上的数据，但是对于如果只返回一部分数据的接口而言，这是有问题的，所以做了改动。

 	/* Fetches the data from the persistent data storage.
	 * @return array list of data items
	 */
	protected function fetchData()
	{
		if(($sort=$this->getSort())!==false && ($order=$sort->getOrderBy())!='')
			$this->sortData($this->getSortDirections($order));

		if(($pagination=$this->getPagination())!==false)
		{
			$pagination->setItemCount($this->getTotalItemCount());
            return $this->rawData;
			//return array_slice($this->rawData, $pagination->getOffset(), $pagination->getLimit());
		}
		else
			return $this->rawData;
	}

这是一种改动方法，但是改底层代码是不太恰当的，所以最好是将原来的方法覆盖掉，这样最稳妥。